#!/usr/bin/env ruby
require 'rubygems'
require 'ttml'
require 'optimist'

opts = Optimist::options do
  opt :offset, "Offset in seconds to apply when converting", :default => 0
  banner <<EOS
This script converts a ttml xml file containing subtitles to a SubRip format
file. The output is sent to standard output, so usage would be:

ttml2srt [-offset n] some_file.xml > some_file.srt
EOS
end

raise "Please pass filename[s] to parse" if ARGV.empty?

def self.conv2srt fname, offset
  doc = TTML::Document.new(fname) || raise("No doc at #{ fname }")
  counter = 1
  doc.subtitle_stream.each do |sub|
    # Avoid outputting empty lines
    cleaned = TTML::Util.strip_tags(sub.content)
    next if cleaned.empty?
    b_time = sub['begin'].to_i + offset
    e_time = sub['end'].to_i + offset
    print "#{ counter }\n#{ TTML::Util.smpte_time(b_time) } --> #{ TTML::Util.smpte_time(e_time) }\n#{ cleaned }\n\n"
    counter += 1
  end
end

while fname = ARGV.shift
  conv2srt(fname, opts[:offset])
end
